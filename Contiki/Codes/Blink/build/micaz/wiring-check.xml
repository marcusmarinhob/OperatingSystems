<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405a0280"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4049d2a0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4049d2a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4058d1c8"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4059ac08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c2660"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405c2660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405cd8e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x40598010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406cb428"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406cb428"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405cd8e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x405963a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406c72c0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406c72c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405cd8e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405a75a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403ed698"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403ed698"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405b0d98"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049dec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d3188"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4058d560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403e7250"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403e7250"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x404754f8"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4058db28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049b0a0"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4049b0a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049ab90"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4058c010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4049dec0"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a0968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4057bc08"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4049e418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4057b858"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405c4870"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049e010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40499408"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40499408"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404a53d0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404997d8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4049a0f8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404aa9e8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x404afea8"/></to>
    </wire>
    <wire loc="141:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404afea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404fa6b0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ae4a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404997d8"/></to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404cd210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4054aee0"/></to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404bf750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405184f0"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x405184f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40799010"/></to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404c3ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4051a030"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4051a030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407cc228"/></to>
    </wire>
    <wire loc="185:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404d1ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40802c08"/></to>
    </wire>
    <wire loc="143:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404b72f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40503988"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40503988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ec010"/></to>
    </wire>
    <wire loc="183:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404c8a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408057f8"/></to>
    </wire>
    <wire loc="146:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404b6750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40508888"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40508888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4071fde8"/></to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404baea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405094f0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x405094f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40758d70"/></to>
    </wire>
    <wire loc="168:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404c7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40516170"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40516170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40794010"/></to>
    </wire>
    <wire loc="179:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404cac08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40525c88"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40525c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407dd0b0"/></to>
    </wire>
    <wire loc="138:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404b0010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404fc968"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404fc968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e3c08"/></to>
    </wire>
    <wire loc="149:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404b4670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405065d0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x405065d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4072ac08"/></to>
    </wire>
    <wire loc="160:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404c2ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40511170"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40511170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40767c08"/></to>
    </wire>
    <wire loc="171:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404c54b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40515e48"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40515e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407a5010"/></to>
    </wire>
    <wire loc="188:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404cfce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40813a88"/></to>
    </wire>
    <wire loc="194:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404d52f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4055add8"/></to>
    </wire>
    <wire loc="174:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404c48e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4051cd30"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4051cd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d0de0"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404fa6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f0a88"/></to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404bc590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40504250"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40504250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40725a88"/></to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404cde08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405523e8"/></to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404bba08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050a228"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4050a228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4075b938"/></to>
    </wire>
    <wire loc="166:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404be210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40518e48"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40518e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407989e8"/></to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404cc750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4051a988"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4051a988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407cbc08"/></to>
    </wire>
    <wire loc="186:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404d08e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40529250"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40529250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408006c0"/></to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404b7ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40502330"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40502330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406fd9e8"/></to>
    </wire>
    <wire loc="147:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404b5210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40507250"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40507250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4071a7f8"/></to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404b98e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40509e48"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40509e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407567f8"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404c60a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40516ac8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40516ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407939e8"/></to>
    </wire>
    <wire loc="180:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404c9670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405246b0"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x405246b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407dca88"/></to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404b0a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404fb330"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404fb330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f36c0"/></to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404bd0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40506f28"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40506f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407286c0"/></to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404c1750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40511ac8"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40511ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407656c0"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404ce750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40811538"/></to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404c0c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40519b00"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40519b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4079c538"/></to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404c32f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4051b6b0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4051b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407ce7f8"/></to>
    </wire>
    <wire loc="184:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404d14b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40803228"/></to>
    </wire>
    <wire loc="195:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404d5ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405563b0"/></to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404b88e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40503030"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40503030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ee538"/></to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404bb010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40504ba8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40504ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40737538"/></to>
    </wire>
    <wire loc="182:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404c80a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40520c28"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40520c28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407f5de8"/></to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404ba4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050ab80"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4050ab80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407593b0"/></to>
    </wire>
    <wire loc="167:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404bec08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405177d0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x405177d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40796538"/></to>
    </wire>
    <wire loc="178:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404ca210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40525330"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40525330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c96c0"/></to>
    </wire>
    <wire loc="187:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404cf2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408140b0"/></to>
    </wire>
    <wire loc="137:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404a7548"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404fc010"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404fc010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406e4228"/></to>
    </wire>
    <wire loc="148:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404b5c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40507ba8"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40507ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4072c228"/></to>
    </wire>
    <wire loc="159:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404c22f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405127d0"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x405127d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40768228"/></to>
    </wire>
    <wire loc="170:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404c6a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405154f0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x405154f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407a7538"/></to>
    </wire>
    <wire loc="193:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404d6830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405508f0"/></to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404c5ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051c3d8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4051c3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d1418"/></to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404c0210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405104f0"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x405104f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407630b0"/></to>
    </wire>
    <wire loc="140:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404af4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404fbc88"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404fbc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406f10b0"/></to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404bdb18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40505890"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40505890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407260b0"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403ee9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40475d30"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404749b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40471438"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4048af10"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406397b8"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405c4870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405b0a50"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405adb00"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405afa20"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405afa20"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x404b0a08"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405ac580"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405c54c0"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405c54c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x404b0010"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405ab010"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405c5ec8"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405c5ec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404a7548"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405cd8e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405d3938"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405d3938"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40695a60"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405d3188"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d9240"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405dbaf0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406c3460"/></to>
    </wire>
    <wire loc="35:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405d9240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406765a8"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406b7e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405daa88"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40689e50"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x405e1978"/></to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x405e1978"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406769e0"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406c3df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x405ea2e0"/></to>
    </wire>
    <wire loc="37:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x405ea2e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406735b8"/></to>
    </wire>
    <wire loc="37:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406735b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4087a800"/></to>
    </wire>
    <wire loc="35:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406765a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4087d930"/></to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406769e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4087dd68"/></to>
    </wire>
    <wire loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40879a68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40627488"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40627488"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4063e010"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40877c48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40635760"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40635760"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4063b360"/></to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x408924a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406330f0"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406330f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4063bcc0"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40891e98"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40632c30"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40632c30"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x40639c18"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40687818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403ee9c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406c4050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403ee9c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/usr/src/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/usr/src/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/usr/src/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/usr/src/tinyos/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/usr/src/tinyos/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/usr/src/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/src/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/src/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/usr/src/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/usr/src/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/src/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/usr/src/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405e0dd8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d3b08" loc="40:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d3d20" loc="40:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404da010" loc="40:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404def08" loc="41:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404e5148" loc="42:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404e5370" loc="43:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404e5560" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40531f28" loc="42:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4052e160" loc="43:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4052e388" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4052e578" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/src/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405e0dd8" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405e0dd8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405e8010" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405ef2f8" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405ef2f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405ef4b8" loc="23:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405dc560" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405dc560"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40697b58" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40697b58"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40697d38" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406c13e8" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406c13e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4049dec0" loc="58:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4049dec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404950c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4049d2a0" loc="57:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4049d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4049d478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4049a0f8" loc="52:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4049a0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049a2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049b0a0" loc="46:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a0968" loc="50:/usr/src/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a0b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a0c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a0d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a0de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4049e010" loc="45:/usr/src/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4049e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049ab90" loc="44:/usr/src/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049ad68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4049e418" loc="46:/usr/src/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4049e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404997d8" loc="41:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404997d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404999b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40499408" loc="40:/usr/src/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40499408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404995e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404ae4a8" loc="45:/usr/src/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404ae4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ae680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404aa9e8" loc="44:/usr/src/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404aa9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aabc0"/>
        <function-ref name="isInput" scoped="" ref="0x404aaca0"/>
        <function-ref name="toggle" scoped="" ref="0x404aad80"/>
        <function-ref name="isOutput" scoped="" ref="0x404aae60"/>
        <function-ref name="get" scoped="" ref="0x404ae010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae0f0"/>
        <function-ref name="set" scoped="" ref="0x404ae1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404a53d0" loc="43:/usr/src/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404a53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a55a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404cd210" loc="100:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404cd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd5e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cd6c8"/>
        <function-ref name="toggle" scoped="" ref="0x404cd7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd888"/>
        <function-ref name="get" scoped="" ref="0x404cd968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cda48"/>
        <function-ref name="set" scoped="" ref="0x404cdb28"/>
        <function-ref name="clr" scoped="" ref="0x404cdc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404bf750" loc="74:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404bf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf928"/>
        <function-ref name="isInput" scoped="" ref="0x404bfa08"/>
        <function-ref name="toggle" scoped="" ref="0x404bfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bfbc8"/>
        <function-ref name="get" scoped="" ref="0x404bfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bfd88"/>
        <function-ref name="set" scoped="" ref="0x404bfe68"/>
        <function-ref name="clr" scoped="" ref="0x404be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404c3ce8" loc="85:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404c3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404cc010"/>
        <function-ref name="toggle" scoped="" ref="0x404cc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc1d0"/>
        <function-ref name="get" scoped="" ref="0x404cc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc390"/>
        <function-ref name="set" scoped="" ref="0x404cc470"/>
        <function-ref name="clr" scoped="" ref="0x404cc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404d1ea8" loc="94:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404d1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d00c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d01a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d0280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0360"/>
        <function-ref name="get" scoped="" ref="0x404d0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0520"/>
        <function-ref name="set" scoped="" ref="0x404d0600"/>
        <function-ref name="clr" scoped="" ref="0x404d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404b72f0" loc="52:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b74c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b75a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b7688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7768"/>
        <function-ref name="get" scoped="" ref="0x404b7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7928"/>
        <function-ref name="set" scoped="" ref="0x404b7a08"/>
        <function-ref name="clr" scoped="" ref="0x404b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404c8a98" loc="92:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404c8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c8d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8f10"/>
        <function-ref name="get" scoped="" ref="0x404d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d10f0"/>
        <function-ref name="set" scoped="" ref="0x404d11d0"/>
        <function-ref name="clr" scoped="" ref="0x404d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404b6750" loc="55:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404b6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6928"/>
        <function-ref name="isInput" scoped="" ref="0x404b6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6bc8"/>
        <function-ref name="get" scoped="" ref="0x404b6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6d88"/>
        <function-ref name="set" scoped="" ref="0x404b6e68"/>
        <function-ref name="clr" scoped="" ref="0x404b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404baea8" loc="66:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404baea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b90c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b91a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b9280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9360"/>
        <function-ref name="get" scoped="" ref="0x404b9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9520"/>
        <function-ref name="set" scoped="" ref="0x404b9600"/>
        <function-ref name="clr" scoped="" ref="0x404b96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404c7670" loc="77:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7848"/>
        <function-ref name="isInput" scoped="" ref="0x404c7928"/>
        <function-ref name="toggle" scoped="" ref="0x404c7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7ae8"/>
        <function-ref name="get" scoped="" ref="0x404c7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7ca8"/>
        <function-ref name="set" scoped="" ref="0x404c7d88"/>
        <function-ref name="clr" scoped="" ref="0x404c7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404cac08" loc="88:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404cac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cade0"/>
        <function-ref name="isInput" scoped="" ref="0x404caec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c90f0"/>
        <function-ref name="get" scoped="" ref="0x404c91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c92b0"/>
        <function-ref name="set" scoped="" ref="0x404c9390"/>
        <function-ref name="clr" scoped="" ref="0x404c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404b0010" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b01e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b02c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0488"/>
        <function-ref name="get" scoped="" ref="0x404b0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0648"/>
        <function-ref name="set" scoped="" ref="0x404b0728"/>
        <function-ref name="clr" scoped="" ref="0x404b0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404b4670" loc="58:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4848"/>
        <function-ref name="isInput" scoped="" ref="0x404b4928"/>
        <function-ref name="toggle" scoped="" ref="0x404b4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4ae8"/>
        <function-ref name="get" scoped="" ref="0x404b4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4ca8"/>
        <function-ref name="set" scoped="" ref="0x404b4d88"/>
        <function-ref name="clr" scoped="" ref="0x404b4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404c2ce8" loc="69:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404c2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404c1010"/>
        <function-ref name="toggle" scoped="" ref="0x404c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c11d0"/>
        <function-ref name="get" scoped="" ref="0x404c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1390"/>
        <function-ref name="set" scoped="" ref="0x404c1470"/>
        <function-ref name="clr" scoped="" ref="0x404c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404c54b0" loc="80:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404c54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5688"/>
        <function-ref name="isInput" scoped="" ref="0x404c5768"/>
        <function-ref name="toggle" scoped="" ref="0x404c5848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5928"/>
        <function-ref name="get" scoped="" ref="0x404c5a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5ae8"/>
        <function-ref name="set" scoped="" ref="0x404c5bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404cfce8" loc="97:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404cfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cfec0"/>
        <function-ref name="isInput" scoped="" ref="0x404ce010"/>
        <function-ref name="toggle" scoped="" ref="0x404ce0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce1d0"/>
        <function-ref name="get" scoped="" ref="0x404ce2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce390"/>
        <function-ref name="set" scoped="" ref="0x404ce470"/>
        <function-ref name="clr" scoped="" ref="0x404ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404d52f0" loc="103:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d54c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d55a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d5688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5768"/>
        <function-ref name="get" scoped="" ref="0x404d5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5928"/>
        <function-ref name="set" scoped="" ref="0x404d5a08"/>
        <function-ref name="clr" scoped="" ref="0x404d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404c48e0" loc="83:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404c48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404c4b98"/>
        <function-ref name="toggle" scoped="" ref="0x404c4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4d58"/>
        <function-ref name="get" scoped="" ref="0x404c4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4f18"/>
        <function-ref name="set" scoped="" ref="0x404c3010"/>
        <function-ref name="clr" scoped="" ref="0x404c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404afea8" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404afea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b80c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b81a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b8280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8360"/>
        <function-ref name="get" scoped="" ref="0x404b8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8520"/>
        <function-ref name="set" scoped="" ref="0x404b8600"/>
        <function-ref name="clr" scoped="" ref="0x404b86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404bc590" loc="61:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404bc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc768"/>
        <function-ref name="isInput" scoped="" ref="0x404bc848"/>
        <function-ref name="toggle" scoped="" ref="0x404bc928"/>
        <function-ref name="isOutput" scoped="" ref="0x404bca08"/>
        <function-ref name="get" scoped="" ref="0x404bcae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcbc8"/>
        <function-ref name="set" scoped="" ref="0x404bcca8"/>
        <function-ref name="clr" scoped="" ref="0x404bcd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404cde08" loc="101:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404cde08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6010"/>
        <function-ref name="isInput" scoped="" ref="0x404d60f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d62b0"/>
        <function-ref name="get" scoped="" ref="0x404d6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6470"/>
        <function-ref name="set" scoped="" ref="0x404d6550"/>
        <function-ref name="clr" scoped="" ref="0x404d6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404bba08" loc="64:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404bba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbbe0"/>
        <function-ref name="isInput" scoped="" ref="0x404bbcc0"/>
        <function-ref name="toggle" scoped="" ref="0x404bbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbe80"/>
        <function-ref name="get" scoped="" ref="0x404ba010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba0f0"/>
        <function-ref name="set" scoped="" ref="0x404ba1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404be210" loc="75:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404be210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404be4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404be5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404be688"/>
        <function-ref name="get" scoped="" ref="0x404be768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be848"/>
        <function-ref name="set" scoped="" ref="0x404be928"/>
        <function-ref name="clr" scoped="" ref="0x404bea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404cc750" loc="86:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404cc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc928"/>
        <function-ref name="isInput" scoped="" ref="0x404cca08"/>
        <function-ref name="toggle" scoped="" ref="0x404ccae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ccbc8"/>
        <function-ref name="get" scoped="" ref="0x404ccca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ccd88"/>
        <function-ref name="set" scoped="" ref="0x404cce68"/>
        <function-ref name="clr" scoped="" ref="0x404ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404d08e0" loc="95:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404d08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d0b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0d58"/>
        <function-ref name="get" scoped="" ref="0x404d0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0f18"/>
        <function-ref name="set" scoped="" ref="0x404cf010"/>
        <function-ref name="clr" scoped="" ref="0x404cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404b7ce8" loc="53:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404b7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6010"/>
        <function-ref name="toggle" scoped="" ref="0x404b60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b61d0"/>
        <function-ref name="get" scoped="" ref="0x404b62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6390"/>
        <function-ref name="set" scoped="" ref="0x404b6470"/>
        <function-ref name="clr" scoped="" ref="0x404b6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404b5210" loc="56:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404b5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b53e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b54c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5688"/>
        <function-ref name="get" scoped="" ref="0x404b5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5848"/>
        <function-ref name="set" scoped="" ref="0x404b5928"/>
        <function-ref name="clr" scoped="" ref="0x404b5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404b98e0" loc="67:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404b98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b9b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9d58"/>
        <function-ref name="get" scoped="" ref="0x404b9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9f18"/>
        <function-ref name="set" scoped="" ref="0x404c2010"/>
        <function-ref name="clr" scoped="" ref="0x404c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404c60a0" loc="78:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6278"/>
        <function-ref name="isInput" scoped="" ref="0x404c6358"/>
        <function-ref name="toggle" scoped="" ref="0x404c6438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6518"/>
        <function-ref name="get" scoped="" ref="0x404c65f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c66d8"/>
        <function-ref name="set" scoped="" ref="0x404c67b8"/>
        <function-ref name="clr" scoped="" ref="0x404c6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404c9670" loc="89:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9848"/>
        <function-ref name="isInput" scoped="" ref="0x404c9928"/>
        <function-ref name="toggle" scoped="" ref="0x404c9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9ae8"/>
        <function-ref name="get" scoped="" ref="0x404c9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9ca8"/>
        <function-ref name="set" scoped="" ref="0x404c9d88"/>
        <function-ref name="clr" scoped="" ref="0x404c9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404b0a08" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404b0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0be0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0e80"/>
        <function-ref name="get" scoped="" ref="0x404af010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af0f0"/>
        <function-ref name="set" scoped="" ref="0x404af1d0"/>
        <function-ref name="clr" scoped="" ref="0x404af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404bd0a0" loc="59:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd2f8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd3d8"/>
        <function-ref name="toggle" scoped="" ref="0x404bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd598"/>
        <function-ref name="get" scoped="" ref="0x404bd678"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd758"/>
        <function-ref name="set" scoped="" ref="0x404bd838"/>
        <function-ref name="clr" scoped="" ref="0x404bd918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404c1750" loc="70:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404c1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1928"/>
        <function-ref name="isInput" scoped="" ref="0x404c1a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1bc8"/>
        <function-ref name="get" scoped="" ref="0x404c1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1d88"/>
        <function-ref name="set" scoped="" ref="0x404c1e68"/>
        <function-ref name="clr" scoped="" ref="0x404c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404ce750" loc="98:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404ce750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce928"/>
        <function-ref name="isInput" scoped="" ref="0x404cea08"/>
        <function-ref name="toggle" scoped="" ref="0x404ceae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cebc8"/>
        <function-ref name="get" scoped="" ref="0x404ceca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ced88"/>
        <function-ref name="set" scoped="" ref="0x404cee68"/>
        <function-ref name="clr" scoped="" ref="0x404cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404c0c08" loc="73:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404c0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404bf010"/>
        <function-ref name="toggle" scoped="" ref="0x404bf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf1d0"/>
        <function-ref name="get" scoped="" ref="0x404bf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf390"/>
        <function-ref name="set" scoped="" ref="0x404bf470"/>
        <function-ref name="clr" scoped="" ref="0x404bf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404c32f0" loc="84:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3768"/>
        <function-ref name="get" scoped="" ref="0x404c3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3928"/>
        <function-ref name="set" scoped="" ref="0x404c3a08"/>
        <function-ref name="clr" scoped="" ref="0x404c3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404d14b0" loc="93:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404d14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1688"/>
        <function-ref name="isInput" scoped="" ref="0x404d1768"/>
        <function-ref name="toggle" scoped="" ref="0x404d1848"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1928"/>
        <function-ref name="get" scoped="" ref="0x404d1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1ae8"/>
        <function-ref name="set" scoped="" ref="0x404d1bc8"/>
        <function-ref name="clr" scoped="" ref="0x404d1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404d5ce8" loc="104:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404d5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d4010"/>
        <function-ref name="toggle" scoped="" ref="0x404d40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d41d0"/>
        <function-ref name="get" scoped="" ref="0x404d42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4390"/>
        <function-ref name="set" scoped="" ref="0x404d4470"/>
        <function-ref name="clr" scoped="" ref="0x404d4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404b88e0" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404b88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b8b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8d58"/>
        <function-ref name="get" scoped="" ref="0x404b8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8f18"/>
        <function-ref name="set" scoped="" ref="0x404b7010"/>
        <function-ref name="clr" scoped="" ref="0x404b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404bb010" loc="62:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb488"/>
        <function-ref name="get" scoped="" ref="0x404bb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb648"/>
        <function-ref name="set" scoped="" ref="0x404bb728"/>
        <function-ref name="clr" scoped="" ref="0x404bb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404c80a0" loc="91:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404c80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8278"/>
        <function-ref name="isInput" scoped="" ref="0x404c8358"/>
        <function-ref name="toggle" scoped="" ref="0x404c8438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8518"/>
        <function-ref name="get" scoped="" ref="0x404c85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c86d8"/>
        <function-ref name="set" scoped="" ref="0x404c87b8"/>
        <function-ref name="clr" scoped="" ref="0x404c8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404ba4b0" loc="65:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404ba4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba688"/>
        <function-ref name="isInput" scoped="" ref="0x404ba768"/>
        <function-ref name="toggle" scoped="" ref="0x404ba848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba928"/>
        <function-ref name="get" scoped="" ref="0x404baa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404baae8"/>
        <function-ref name="set" scoped="" ref="0x404babc8"/>
        <function-ref name="clr" scoped="" ref="0x404baca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404bec08" loc="76:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404bec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bede0"/>
        <function-ref name="isInput" scoped="" ref="0x404beec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c70f0"/>
        <function-ref name="get" scoped="" ref="0x404c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c72b0"/>
        <function-ref name="set" scoped="" ref="0x404c7390"/>
        <function-ref name="clr" scoped="" ref="0x404c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404ca210" loc="87:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404ca210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ca4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ca5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca688"/>
        <function-ref name="get" scoped="" ref="0x404ca768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca848"/>
        <function-ref name="set" scoped="" ref="0x404ca928"/>
        <function-ref name="clr" scoped="" ref="0x404caa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404cf2f0" loc="96:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404cf5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404cf688"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf768"/>
        <function-ref name="get" scoped="" ref="0x404cf848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf928"/>
        <function-ref name="set" scoped="" ref="0x404cfa08"/>
        <function-ref name="clr" scoped="" ref="0x404cfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404a7548" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404a7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7720"/>
        <function-ref name="isInput" scoped="" ref="0x404a7800"/>
        <function-ref name="toggle" scoped="" ref="0x404a78e0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a79c0"/>
        <function-ref name="get" scoped="" ref="0x404a7aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7b80"/>
        <function-ref name="set" scoped="" ref="0x404a7c60"/>
        <function-ref name="clr" scoped="" ref="0x404a7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404b5c08" loc="57:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404b5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b4010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b40f0"/>
        <function-ref name="get" scoped="" ref="0x404b41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b42b0"/>
        <function-ref name="set" scoped="" ref="0x404b4390"/>
        <function-ref name="clr" scoped="" ref="0x404b4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404c22f0" loc="68:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c24c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c25a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c2688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2768"/>
        <function-ref name="get" scoped="" ref="0x404c2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2928"/>
        <function-ref name="set" scoped="" ref="0x404c2a08"/>
        <function-ref name="clr" scoped="" ref="0x404c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404c6a98" loc="79:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404c6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c6d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6f10"/>
        <function-ref name="get" scoped="" ref="0x404c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c50f0"/>
        <function-ref name="set" scoped="" ref="0x404c51d0"/>
        <function-ref name="clr" scoped="" ref="0x404c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404d6830" loc="102:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404d6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6a08"/>
        <function-ref name="isInput" scoped="" ref="0x404d6ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404d6bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6ca8"/>
        <function-ref name="get" scoped="" ref="0x404d6d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6e68"/>
        <function-ref name="set" scoped="" ref="0x404d5010"/>
        <function-ref name="clr" scoped="" ref="0x404d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404c5ea8" loc="82:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404c5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c40c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c41a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c4280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4360"/>
        <function-ref name="get" scoped="" ref="0x404c4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4520"/>
        <function-ref name="set" scoped="" ref="0x404c4600"/>
        <function-ref name="clr" scoped="" ref="0x404c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404c0210" loc="71:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404c0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c03e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c04c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0688"/>
        <function-ref name="get" scoped="" ref="0x404c0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0848"/>
        <function-ref name="set" scoped="" ref="0x404c0928"/>
        <function-ref name="clr" scoped="" ref="0x404c0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404af4b0" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404af4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af688"/>
        <function-ref name="isInput" scoped="" ref="0x404af768"/>
        <function-ref name="toggle" scoped="" ref="0x404af848"/>
        <function-ref name="isOutput" scoped="" ref="0x404af928"/>
        <function-ref name="get" scoped="" ref="0x404afa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afae8"/>
        <function-ref name="set" scoped="" ref="0x404afbc8"/>
        <function-ref name="clr" scoped="" ref="0x404afca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404bdb18" loc="60:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404bdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdcf0"/>
        <function-ref name="isInput" scoped="" ref="0x404bddd0"/>
        <function-ref name="toggle" scoped="" ref="0x404bdeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc010"/>
        <function-ref name="get" scoped="" ref="0x404bc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc1d0"/>
        <function-ref name="set" scoped="" ref="0x404bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x404bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404fb330" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb508"/>
        <function-ref name="isInput" scoped="" ref="0x404fb5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404fb6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb7a8"/>
        <function-ref name="get" scoped="" ref="0x404fb888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb968"/>
        <function-ref name="set" scoped="" ref="0x404fba48"/>
        <function-ref name="clr" scoped="" ref="0x404fbb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40503030" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40503030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503208"/>
        <function-ref name="isInput" scoped="" ref="0x405032e8"/>
        <function-ref name="toggle" scoped="" ref="0x405033c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405034a8"/>
        <function-ref name="get" scoped="" ref="0x40503588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503668"/>
        <function-ref name="set" scoped="" ref="0x40503748"/>
        <function-ref name="clr" scoped="" ref="0x40503828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404fc010" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404fc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404fc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc488"/>
        <function-ref name="get" scoped="" ref="0x404fc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc648"/>
        <function-ref name="set" scoped="" ref="0x404fc728"/>
        <function-ref name="clr" scoped="" ref="0x404fc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404fbc88" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404fbc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fbe60"/>
        <function-ref name="isInput" scoped="" ref="0x404fa010"/>
        <function-ref name="toggle" scoped="" ref="0x404fa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa1d0"/>
        <function-ref name="get" scoped="" ref="0x404fa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa390"/>
        <function-ref name="set" scoped="" ref="0x404fa470"/>
        <function-ref name="clr" scoped="" ref="0x404fa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40503988" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40503988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503b60"/>
        <function-ref name="isInput" scoped="" ref="0x40503c40"/>
        <function-ref name="toggle" scoped="" ref="0x40503d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40503e00"/>
        <function-ref name="get" scoped="" ref="0x40503ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502010"/>
        <function-ref name="set" scoped="" ref="0x405020f0"/>
        <function-ref name="clr" scoped="" ref="0x405021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404fc968" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404fc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fcb40"/>
        <function-ref name="isInput" scoped="" ref="0x404fcc20"/>
        <function-ref name="toggle" scoped="" ref="0x404fcd00"/>
        <function-ref name="isOutput" scoped="" ref="0x404fcde0"/>
        <function-ref name="get" scoped="" ref="0x404fcec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb010"/>
        <function-ref name="set" scoped="" ref="0x404fb0f0"/>
        <function-ref name="clr" scoped="" ref="0x404fb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404fa6b0" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404fa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa888"/>
        <function-ref name="isInput" scoped="" ref="0x404fa968"/>
        <function-ref name="toggle" scoped="" ref="0x404faa48"/>
        <function-ref name="isOutput" scoped="" ref="0x404fab28"/>
        <function-ref name="get" scoped="" ref="0x404fac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404face8"/>
        <function-ref name="set" scoped="" ref="0x404fadc8"/>
        <function-ref name="clr" scoped="" ref="0x404faea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40502330" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40502330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502508"/>
        <function-ref name="isInput" scoped="" ref="0x405025e8"/>
        <function-ref name="toggle" scoped="" ref="0x405026c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405027a8"/>
        <function-ref name="get" scoped="" ref="0x40502888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502968"/>
        <function-ref name="set" scoped="" ref="0x40502a48"/>
        <function-ref name="clr" scoped="" ref="0x40502b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e4228" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e4400"/>
        <function-ref name="isInput" scoped="" ref="0x406e44e0"/>
        <function-ref name="toggle" scoped="" ref="0x406e45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e46a0"/>
        <function-ref name="get" scoped="" ref="0x406e4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e4860"/>
        <function-ref name="set" scoped="" ref="0x406e4940"/>
        <function-ref name="clr" scoped="" ref="0x406e4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406e3c08" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406e3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e3de0"/>
        <function-ref name="isInput" scoped="" ref="0x406e3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x406f4010"/>
        <function-ref name="isOutput" scoped="" ref="0x406f40f0"/>
        <function-ref name="get" scoped="" ref="0x406f41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f42b0"/>
        <function-ref name="set" scoped="" ref="0x406f4390"/>
        <function-ref name="clr" scoped="" ref="0x406f4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f36c0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f3898"/>
        <function-ref name="isInput" scoped="" ref="0x406f3978"/>
        <function-ref name="toggle" scoped="" ref="0x406f3a58"/>
        <function-ref name="isOutput" scoped="" ref="0x406f3b38"/>
        <function-ref name="get" scoped="" ref="0x406f3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f3cf8"/>
        <function-ref name="set" scoped="" ref="0x406f3dd8"/>
        <function-ref name="clr" scoped="" ref="0x406f3eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f10b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f1288"/>
        <function-ref name="isInput" scoped="" ref="0x406f1368"/>
        <function-ref name="toggle" scoped="" ref="0x406f1448"/>
        <function-ref name="isOutput" scoped="" ref="0x406f1528"/>
        <function-ref name="get" scoped="" ref="0x406f1608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406f16e8"/>
        <function-ref name="set" scoped="" ref="0x406f17c8"/>
        <function-ref name="clr" scoped="" ref="0x406f18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406f0a88" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406f0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406f0c60"/>
        <function-ref name="isInput" scoped="" ref="0x406f0d40"/>
        <function-ref name="toggle" scoped="" ref="0x406f0e20"/>
        <function-ref name="isOutput" scoped="" ref="0x406f0f00"/>
        <function-ref name="get" scoped="" ref="0x406ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ef0f0"/>
        <function-ref name="set" scoped="" ref="0x406ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x406ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ee538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406ee538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ee710"/>
        <function-ref name="isInput" scoped="" ref="0x406ee7f0"/>
        <function-ref name="toggle" scoped="" ref="0x406ee8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406ee9b0"/>
        <function-ref name="get" scoped="" ref="0x406eea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x406eeb70"/>
        <function-ref name="set" scoped="" ref="0x406eec50"/>
        <function-ref name="clr" scoped="" ref="0x406eed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ec010" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ec1e8"/>
        <function-ref name="isInput" scoped="" ref="0x406ec2c8"/>
        <function-ref name="toggle" scoped="" ref="0x406ec3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406ec488"/>
        <function-ref name="get" scoped="" ref="0x406ec568"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ec648"/>
        <function-ref name="set" scoped="" ref="0x406ec728"/>
        <function-ref name="clr" scoped="" ref="0x406ec808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406fd9e8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406fd9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406fdbc0"/>
        <function-ref name="isInput" scoped="" ref="0x406fdca0"/>
        <function-ref name="toggle" scoped="" ref="0x406fdd80"/>
        <function-ref name="isOutput" scoped="" ref="0x406fde60"/>
        <function-ref name="get" scoped="" ref="0x406fc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fc0f0"/>
        <function-ref name="set" scoped="" ref="0x406fc1d0"/>
        <function-ref name="clr" scoped="" ref="0x406fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40507ba8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40507ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507d80"/>
        <function-ref name="isInput" scoped="" ref="0x40507e60"/>
        <function-ref name="toggle" scoped="" ref="0x40506010"/>
        <function-ref name="isOutput" scoped="" ref="0x405060f0"/>
        <function-ref name="get" scoped="" ref="0x405061d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405062b0"/>
        <function-ref name="set" scoped="" ref="0x40506390"/>
        <function-ref name="clr" scoped="" ref="0x40506470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40505890" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40505890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505a68"/>
        <function-ref name="isInput" scoped="" ref="0x40505b48"/>
        <function-ref name="toggle" scoped="" ref="0x40505c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40505d08"/>
        <function-ref name="get" scoped="" ref="0x40505de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505ec8"/>
        <function-ref name="set" scoped="" ref="0x40504010"/>
        <function-ref name="clr" scoped="" ref="0x405040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40508888" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40508888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508a60"/>
        <function-ref name="isInput" scoped="" ref="0x40508b40"/>
        <function-ref name="toggle" scoped="" ref="0x40508c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40508d00"/>
        <function-ref name="get" scoped="" ref="0x40508de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508ec0"/>
        <function-ref name="set" scoped="" ref="0x40507010"/>
        <function-ref name="clr" scoped="" ref="0x405070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405065d0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405065d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405067a8"/>
        <function-ref name="isInput" scoped="" ref="0x40506888"/>
        <function-ref name="toggle" scoped="" ref="0x40506968"/>
        <function-ref name="isOutput" scoped="" ref="0x40506a48"/>
        <function-ref name="get" scoped="" ref="0x40506b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506c08"/>
        <function-ref name="set" scoped="" ref="0x40506ce8"/>
        <function-ref name="clr" scoped="" ref="0x40506dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40504250" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40504250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504428"/>
        <function-ref name="isInput" scoped="" ref="0x40504508"/>
        <function-ref name="toggle" scoped="" ref="0x405045e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405046c8"/>
        <function-ref name="get" scoped="" ref="0x405047a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504888"/>
        <function-ref name="set" scoped="" ref="0x40504968"/>
        <function-ref name="clr" scoped="" ref="0x40504a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40507250" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40507250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507428"/>
        <function-ref name="isInput" scoped="" ref="0x40507508"/>
        <function-ref name="toggle" scoped="" ref="0x405075e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405076c8"/>
        <function-ref name="get" scoped="" ref="0x405077a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507888"/>
        <function-ref name="set" scoped="" ref="0x40507968"/>
        <function-ref name="clr" scoped="" ref="0x40507a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40506f28" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40506f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505110"/>
        <function-ref name="isInput" scoped="" ref="0x405051f0"/>
        <function-ref name="toggle" scoped="" ref="0x405052d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405053b0"/>
        <function-ref name="get" scoped="" ref="0x40505490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505570"/>
        <function-ref name="set" scoped="" ref="0x40505650"/>
        <function-ref name="clr" scoped="" ref="0x40505730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40504ba8" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40504ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504d80"/>
        <function-ref name="isInput" scoped="" ref="0x40504e60"/>
        <function-ref name="toggle" scoped="" ref="0x4050d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d0f0"/>
        <function-ref name="get" scoped="" ref="0x4050d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d2b0"/>
        <function-ref name="set" scoped="" ref="0x4050d390"/>
        <function-ref name="clr" scoped="" ref="0x4050d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4071fde8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4071fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4071b010"/>
        <function-ref name="isInput" scoped="" ref="0x4071b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4071b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4071b2b0"/>
        <function-ref name="get" scoped="" ref="0x4071b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4071b470"/>
        <function-ref name="set" scoped="" ref="0x4071b550"/>
        <function-ref name="clr" scoped="" ref="0x4071b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4071a7f8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4071a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4071a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4071aab0"/>
        <function-ref name="toggle" scoped="" ref="0x4071ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x4071ac70"/>
        <function-ref name="get" scoped="" ref="0x4071ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4071ae30"/>
        <function-ref name="set" scoped="" ref="0x4071af10"/>
        <function-ref name="clr" scoped="" ref="0x4072d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4072c228" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4072c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072c400"/>
        <function-ref name="isInput" scoped="" ref="0x4072c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4072c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4072c6a0"/>
        <function-ref name="get" scoped="" ref="0x4072c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072c860"/>
        <function-ref name="set" scoped="" ref="0x4072c940"/>
        <function-ref name="clr" scoped="" ref="0x4072ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4072ac08" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4072ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4072aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40729010"/>
        <function-ref name="isOutput" scoped="" ref="0x407290f0"/>
        <function-ref name="get" scoped="" ref="0x407291d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407292b0"/>
        <function-ref name="set" scoped="" ref="0x40729390"/>
        <function-ref name="clr" scoped="" ref="0x40729470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407286c0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40728898"/>
        <function-ref name="isInput" scoped="" ref="0x40728978"/>
        <function-ref name="toggle" scoped="" ref="0x40728a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40728b38"/>
        <function-ref name="get" scoped="" ref="0x40728c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40728cf8"/>
        <function-ref name="set" scoped="" ref="0x40728dd8"/>
        <function-ref name="clr" scoped="" ref="0x40728eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407260b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407260b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40726288"/>
        <function-ref name="isInput" scoped="" ref="0x40726368"/>
        <function-ref name="toggle" scoped="" ref="0x40726448"/>
        <function-ref name="isOutput" scoped="" ref="0x40726528"/>
        <function-ref name="get" scoped="" ref="0x40726608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407266e8"/>
        <function-ref name="set" scoped="" ref="0x407267c8"/>
        <function-ref name="clr" scoped="" ref="0x407268a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40725a88" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40725a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40725c60"/>
        <function-ref name="isInput" scoped="" ref="0x40725d40"/>
        <function-ref name="toggle" scoped="" ref="0x40725e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40725f00"/>
        <function-ref name="get" scoped="" ref="0x40724010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407240f0"/>
        <function-ref name="set" scoped="" ref="0x407241d0"/>
        <function-ref name="clr" scoped="" ref="0x407242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40737538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40737538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40737710"/>
        <function-ref name="isInput" scoped="" ref="0x407377f0"/>
        <function-ref name="toggle" scoped="" ref="0x407378d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407379b0"/>
        <function-ref name="get" scoped="" ref="0x40737a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40737b70"/>
        <function-ref name="set" scoped="" ref="0x40737c50"/>
        <function-ref name="clr" scoped="" ref="0x40737d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405094f0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405094f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405096c8"/>
        <function-ref name="isInput" scoped="" ref="0x405097a8"/>
        <function-ref name="toggle" scoped="" ref="0x40509888"/>
        <function-ref name="isOutput" scoped="" ref="0x40509968"/>
        <function-ref name="get" scoped="" ref="0x40509a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509b28"/>
        <function-ref name="set" scoped="" ref="0x40509c08"/>
        <function-ref name="clr" scoped="" ref="0x40509ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40511170" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40511170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511348"/>
        <function-ref name="isInput" scoped="" ref="0x40511428"/>
        <function-ref name="toggle" scoped="" ref="0x40511508"/>
        <function-ref name="isOutput" scoped="" ref="0x405115e8"/>
        <function-ref name="get" scoped="" ref="0x405116c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405117a8"/>
        <function-ref name="set" scoped="" ref="0x40511888"/>
        <function-ref name="clr" scoped="" ref="0x40511968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050a228" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a400"/>
        <function-ref name="isInput" scoped="" ref="0x4050a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4050a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a6a0"/>
        <function-ref name="get" scoped="" ref="0x4050a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a860"/>
        <function-ref name="set" scoped="" ref="0x4050a940"/>
        <function-ref name="clr" scoped="" ref="0x4050aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40509e48" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40509e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512050"/>
        <function-ref name="isInput" scoped="" ref="0x40512130"/>
        <function-ref name="toggle" scoped="" ref="0x40512210"/>
        <function-ref name="isOutput" scoped="" ref="0x405122f0"/>
        <function-ref name="get" scoped="" ref="0x405123d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405124b0"/>
        <function-ref name="set" scoped="" ref="0x40512590"/>
        <function-ref name="clr" scoped="" ref="0x40512670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40511ac8" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40511ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40511d80"/>
        <function-ref name="toggle" scoped="" ref="0x40511e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40510010"/>
        <function-ref name="get" scoped="" ref="0x405100f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405101d0"/>
        <function-ref name="set" scoped="" ref="0x405102b0"/>
        <function-ref name="clr" scoped="" ref="0x40510390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050ab80" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ad58"/>
        <function-ref name="isInput" scoped="" ref="0x4050ae38"/>
        <function-ref name="toggle" scoped="" ref="0x4050af18"/>
        <function-ref name="isOutput" scoped="" ref="0x40509010"/>
        <function-ref name="get" scoped="" ref="0x405090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405091d0"/>
        <function-ref name="set" scoped="" ref="0x405092b0"/>
        <function-ref name="clr" scoped="" ref="0x40509390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405127d0" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405127d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405129a8"/>
        <function-ref name="isInput" scoped="" ref="0x40512a88"/>
        <function-ref name="toggle" scoped="" ref="0x40512b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40512c48"/>
        <function-ref name="get" scoped="" ref="0x40512d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512e08"/>
        <function-ref name="set" scoped="" ref="0x40512ee8"/>
        <function-ref name="clr" scoped="" ref="0x40511010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405104f0" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405104f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405106c8"/>
        <function-ref name="isInput" scoped="" ref="0x405107a8"/>
        <function-ref name="toggle" scoped="" ref="0x40510888"/>
        <function-ref name="isOutput" scoped="" ref="0x40510968"/>
        <function-ref name="get" scoped="" ref="0x40510a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510b28"/>
        <function-ref name="set" scoped="" ref="0x40510c08"/>
        <function-ref name="clr" scoped="" ref="0x40510ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4075b938" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4075b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4075bb10"/>
        <function-ref name="isInput" scoped="" ref="0x4075bbf0"/>
        <function-ref name="toggle" scoped="" ref="0x4075bcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4075bdb0"/>
        <function-ref name="get" scoped="" ref="0x4075be90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4075a010"/>
        <function-ref name="set" scoped="" ref="0x4075a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4075a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407593b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407593b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40759588"/>
        <function-ref name="isInput" scoped="" ref="0x40759668"/>
        <function-ref name="toggle" scoped="" ref="0x40759748"/>
        <function-ref name="isOutput" scoped="" ref="0x40759828"/>
        <function-ref name="get" scoped="" ref="0x40759908"/>
        <function-ref name="makeOutput" scoped="" ref="0x407599e8"/>
        <function-ref name="set" scoped="" ref="0x40759ac8"/>
        <function-ref name="clr" scoped="" ref="0x40759ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40758d70" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40758d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40757010"/>
        <function-ref name="isInput" scoped="" ref="0x407570f0"/>
        <function-ref name="toggle" scoped="" ref="0x407571d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407572b0"/>
        <function-ref name="get" scoped="" ref="0x40757390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40757470"/>
        <function-ref name="set" scoped="" ref="0x40757550"/>
        <function-ref name="clr" scoped="" ref="0x40757630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407567f8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407567f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407569d0"/>
        <function-ref name="isInput" scoped="" ref="0x40756ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40756b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40756c70"/>
        <function-ref name="get" scoped="" ref="0x40756d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40756e30"/>
        <function-ref name="set" scoped="" ref="0x40756f10"/>
        <function-ref name="clr" scoped="" ref="0x40769010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40768228" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40768228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40768400"/>
        <function-ref name="isInput" scoped="" ref="0x407684e0"/>
        <function-ref name="toggle" scoped="" ref="0x407685c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407686a0"/>
        <function-ref name="get" scoped="" ref="0x40768780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40768860"/>
        <function-ref name="set" scoped="" ref="0x40768940"/>
        <function-ref name="clr" scoped="" ref="0x40768a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40767c08" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40767c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40767de0"/>
        <function-ref name="isInput" scoped="" ref="0x40767ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40766010"/>
        <function-ref name="isOutput" scoped="" ref="0x407660f0"/>
        <function-ref name="get" scoped="" ref="0x407661d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407662b0"/>
        <function-ref name="set" scoped="" ref="0x40766390"/>
        <function-ref name="clr" scoped="" ref="0x40766470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407656c0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40765898"/>
        <function-ref name="isInput" scoped="" ref="0x40765978"/>
        <function-ref name="toggle" scoped="" ref="0x40765a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40765b38"/>
        <function-ref name="get" scoped="" ref="0x40765c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40765cf8"/>
        <function-ref name="set" scoped="" ref="0x40765dd8"/>
        <function-ref name="clr" scoped="" ref="0x40765eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407630b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407630b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40763288"/>
        <function-ref name="isInput" scoped="" ref="0x40763368"/>
        <function-ref name="toggle" scoped="" ref="0x40763448"/>
        <function-ref name="isOutput" scoped="" ref="0x40763528"/>
        <function-ref name="get" scoped="" ref="0x40763608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407636e8"/>
        <function-ref name="set" scoped="" ref="0x407637c8"/>
        <function-ref name="clr" scoped="" ref="0x407638a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40518e48" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40518e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517050"/>
        <function-ref name="isInput" scoped="" ref="0x40517130"/>
        <function-ref name="toggle" scoped="" ref="0x40517210"/>
        <function-ref name="isOutput" scoped="" ref="0x405172f0"/>
        <function-ref name="get" scoped="" ref="0x405173d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405174b0"/>
        <function-ref name="set" scoped="" ref="0x40517590"/>
        <function-ref name="clr" scoped="" ref="0x40517670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40516ac8" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40516ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40516d80"/>
        <function-ref name="toggle" scoped="" ref="0x40516e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40515010"/>
        <function-ref name="get" scoped="" ref="0x405150f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405151d0"/>
        <function-ref name="set" scoped="" ref="0x405152b0"/>
        <function-ref name="clr" scoped="" ref="0x40515390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40519b00" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40519b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40519db8"/>
        <function-ref name="toggle" scoped="" ref="0x40519e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40518010"/>
        <function-ref name="get" scoped="" ref="0x405180f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405181d0"/>
        <function-ref name="set" scoped="" ref="0x405182b0"/>
        <function-ref name="clr" scoped="" ref="0x40518390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405177d0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405179a8"/>
        <function-ref name="isInput" scoped="" ref="0x40517a88"/>
        <function-ref name="toggle" scoped="" ref="0x40517b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40517c48"/>
        <function-ref name="get" scoped="" ref="0x40517d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517e08"/>
        <function-ref name="set" scoped="" ref="0x40517ee8"/>
        <function-ref name="clr" scoped="" ref="0x40516010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405154f0" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405156c8"/>
        <function-ref name="isInput" scoped="" ref="0x405157a8"/>
        <function-ref name="toggle" scoped="" ref="0x40515888"/>
        <function-ref name="isOutput" scoped="" ref="0x40515968"/>
        <function-ref name="get" scoped="" ref="0x40515a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515b28"/>
        <function-ref name="set" scoped="" ref="0x40515c08"/>
        <function-ref name="clr" scoped="" ref="0x40515ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405184f0" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405184f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405186c8"/>
        <function-ref name="isInput" scoped="" ref="0x405187a8"/>
        <function-ref name="toggle" scoped="" ref="0x40518888"/>
        <function-ref name="isOutput" scoped="" ref="0x40518968"/>
        <function-ref name="get" scoped="" ref="0x40518a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518b28"/>
        <function-ref name="set" scoped="" ref="0x40518c08"/>
        <function-ref name="clr" scoped="" ref="0x40518ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40516170" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40516170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516348"/>
        <function-ref name="isInput" scoped="" ref="0x40516428"/>
        <function-ref name="toggle" scoped="" ref="0x40516508"/>
        <function-ref name="isOutput" scoped="" ref="0x405165e8"/>
        <function-ref name="get" scoped="" ref="0x405166c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405167a8"/>
        <function-ref name="set" scoped="" ref="0x40516888"/>
        <function-ref name="clr" scoped="" ref="0x40516968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40515e48" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40515e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051f050"/>
        <function-ref name="isInput" scoped="" ref="0x4051f130"/>
        <function-ref name="toggle" scoped="" ref="0x4051f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4051f2f0"/>
        <function-ref name="get" scoped="" ref="0x4051f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051f4b0"/>
        <function-ref name="set" scoped="" ref="0x4051f590"/>
        <function-ref name="clr" scoped="" ref="0x4051f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4079c538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4079c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4079c710"/>
        <function-ref name="isInput" scoped="" ref="0x4079c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4079c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4079c9b0"/>
        <function-ref name="get" scoped="" ref="0x4079ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4079cb70"/>
        <function-ref name="set" scoped="" ref="0x4079cc50"/>
        <function-ref name="clr" scoped="" ref="0x4079cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40799010" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40799010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407991e8"/>
        <function-ref name="isInput" scoped="" ref="0x407992c8"/>
        <function-ref name="toggle" scoped="" ref="0x407993a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40799488"/>
        <function-ref name="get" scoped="" ref="0x40799568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40799648"/>
        <function-ref name="set" scoped="" ref="0x40799728"/>
        <function-ref name="clr" scoped="" ref="0x40799808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407989e8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407989e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40798bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40798ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40798d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40798e60"/>
        <function-ref name="get" scoped="" ref="0x40797010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407970f0"/>
        <function-ref name="set" scoped="" ref="0x407971d0"/>
        <function-ref name="clr" scoped="" ref="0x407972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40796538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40796538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40796710"/>
        <function-ref name="isInput" scoped="" ref="0x407967f0"/>
        <function-ref name="toggle" scoped="" ref="0x407968d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407969b0"/>
        <function-ref name="get" scoped="" ref="0x40796a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40796b70"/>
        <function-ref name="set" scoped="" ref="0x40796c50"/>
        <function-ref name="clr" scoped="" ref="0x40796d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40794010" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40794010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407941e8"/>
        <function-ref name="isInput" scoped="" ref="0x407942c8"/>
        <function-ref name="toggle" scoped="" ref="0x407943a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40794488"/>
        <function-ref name="get" scoped="" ref="0x40794568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40794648"/>
        <function-ref name="set" scoped="" ref="0x40794728"/>
        <function-ref name="clr" scoped="" ref="0x40794808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407939e8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407939e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40793bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40793ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40793d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40793e60"/>
        <function-ref name="get" scoped="" ref="0x40792010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407920f0"/>
        <function-ref name="set" scoped="" ref="0x407921d0"/>
        <function-ref name="clr" scoped="" ref="0x407922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407a7538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407a7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a7710"/>
        <function-ref name="isInput" scoped="" ref="0x407a77f0"/>
        <function-ref name="toggle" scoped="" ref="0x407a78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407a79b0"/>
        <function-ref name="get" scoped="" ref="0x407a7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a7b70"/>
        <function-ref name="set" scoped="" ref="0x407a7c50"/>
        <function-ref name="clr" scoped="" ref="0x407a7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407a5010" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a51e8"/>
        <function-ref name="isInput" scoped="" ref="0x407a52c8"/>
        <function-ref name="toggle" scoped="" ref="0x407a53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407a5488"/>
        <function-ref name="get" scoped="" ref="0x407a5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a5648"/>
        <function-ref name="set" scoped="" ref="0x407a5728"/>
        <function-ref name="clr" scoped="" ref="0x407a5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4051b6b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4051b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051b888"/>
        <function-ref name="isInput" scoped="" ref="0x4051b968"/>
        <function-ref name="toggle" scoped="" ref="0x4051ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4051bb28"/>
        <function-ref name="get" scoped="" ref="0x4051bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051bce8"/>
        <function-ref name="set" scoped="" ref="0x4051bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4051bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40525330" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40525330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40525508"/>
        <function-ref name="isInput" scoped="" ref="0x405255e8"/>
        <function-ref name="toggle" scoped="" ref="0x405256c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405257a8"/>
        <function-ref name="get" scoped="" ref="0x40525888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40525968"/>
        <function-ref name="set" scoped="" ref="0x40525a48"/>
        <function-ref name="clr" scoped="" ref="0x40525b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051c3d8" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051c5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4051c690"/>
        <function-ref name="toggle" scoped="" ref="0x4051c770"/>
        <function-ref name="isOutput" scoped="" ref="0x4051c850"/>
        <function-ref name="get" scoped="" ref="0x4051c930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ca10"/>
        <function-ref name="set" scoped="" ref="0x4051caf0"/>
        <function-ref name="clr" scoped="" ref="0x4051cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4051a030" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4051a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a208"/>
        <function-ref name="isInput" scoped="" ref="0x4051a2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4051a3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a4a8"/>
        <function-ref name="get" scoped="" ref="0x4051a588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a668"/>
        <function-ref name="set" scoped="" ref="0x4051a748"/>
        <function-ref name="clr" scoped="" ref="0x4051a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40525c88" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40525c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40525e60"/>
        <function-ref name="isInput" scoped="" ref="0x40524010"/>
        <function-ref name="toggle" scoped="" ref="0x405240f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405241d0"/>
        <function-ref name="get" scoped="" ref="0x405242b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524390"/>
        <function-ref name="set" scoped="" ref="0x40524470"/>
        <function-ref name="clr" scoped="" ref="0x40524550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4051cd30" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4051cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051cf08"/>
        <function-ref name="isInput" scoped="" ref="0x4051b010"/>
        <function-ref name="toggle" scoped="" ref="0x4051b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b1d0"/>
        <function-ref name="get" scoped="" ref="0x4051b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051b390"/>
        <function-ref name="set" scoped="" ref="0x4051b470"/>
        <function-ref name="clr" scoped="" ref="0x4051b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4051a988" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4051a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051ab60"/>
        <function-ref name="isInput" scoped="" ref="0x4051ac40"/>
        <function-ref name="toggle" scoped="" ref="0x4051ad20"/>
        <function-ref name="isOutput" scoped="" ref="0x4051ae00"/>
        <function-ref name="get" scoped="" ref="0x4051aee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40525010"/>
        <function-ref name="set" scoped="" ref="0x405250f0"/>
        <function-ref name="clr" scoped="" ref="0x405251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405246b0" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524888"/>
        <function-ref name="isInput" scoped="" ref="0x40524968"/>
        <function-ref name="toggle" scoped="" ref="0x40524a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40524b28"/>
        <function-ref name="get" scoped="" ref="0x40524c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524ce8"/>
        <function-ref name="set" scoped="" ref="0x40524dc8"/>
        <function-ref name="clr" scoped="" ref="0x40524ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d1418" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d15f0"/>
        <function-ref name="isInput" scoped="" ref="0x407d16d0"/>
        <function-ref name="toggle" scoped="" ref="0x407d17b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d1890"/>
        <function-ref name="get" scoped="" ref="0x407d1970"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d1a50"/>
        <function-ref name="set" scoped="" ref="0x407d1b30"/>
        <function-ref name="clr" scoped="" ref="0x407d1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d0de0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cf010"/>
        <function-ref name="isInput" scoped="" ref="0x407cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x407cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407cf2b0"/>
        <function-ref name="get" scoped="" ref="0x407cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cf470"/>
        <function-ref name="set" scoped="" ref="0x407cf550"/>
        <function-ref name="clr" scoped="" ref="0x407cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407ce7f8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407ce7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ce9d0"/>
        <function-ref name="isInput" scoped="" ref="0x407ceab0"/>
        <function-ref name="toggle" scoped="" ref="0x407ceb90"/>
        <function-ref name="isOutput" scoped="" ref="0x407cec70"/>
        <function-ref name="get" scoped="" ref="0x407ced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cee30"/>
        <function-ref name="set" scoped="" ref="0x407cef10"/>
        <function-ref name="clr" scoped="" ref="0x407cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407cc228" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407cc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cc400"/>
        <function-ref name="isInput" scoped="" ref="0x407cc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x407cc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407cc6a0"/>
        <function-ref name="get" scoped="" ref="0x407cc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cc860"/>
        <function-ref name="set" scoped="" ref="0x407cc940"/>
        <function-ref name="clr" scoped="" ref="0x407cca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407cbc08" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407cbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cbde0"/>
        <function-ref name="isInput" scoped="" ref="0x407cbec0"/>
        <function-ref name="toggle" scoped="" ref="0x407ca010"/>
        <function-ref name="isOutput" scoped="" ref="0x407ca0f0"/>
        <function-ref name="get" scoped="" ref="0x407ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ca2b0"/>
        <function-ref name="set" scoped="" ref="0x407ca390"/>
        <function-ref name="clr" scoped="" ref="0x407ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c96c0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c9898"/>
        <function-ref name="isInput" scoped="" ref="0x407c9978"/>
        <function-ref name="toggle" scoped="" ref="0x407c9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x407c9b38"/>
        <function-ref name="get" scoped="" ref="0x407c9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c9cf8"/>
        <function-ref name="set" scoped="" ref="0x407c9dd8"/>
        <function-ref name="clr" scoped="" ref="0x407c9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407dd0b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407dd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dd288"/>
        <function-ref name="isInput" scoped="" ref="0x407dd368"/>
        <function-ref name="toggle" scoped="" ref="0x407dd448"/>
        <function-ref name="isOutput" scoped="" ref="0x407dd528"/>
        <function-ref name="get" scoped="" ref="0x407dd608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dd6e8"/>
        <function-ref name="set" scoped="" ref="0x407dd7c8"/>
        <function-ref name="clr" scoped="" ref="0x407dd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407dca88" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407dca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dcc60"/>
        <function-ref name="isInput" scoped="" ref="0x407dcd40"/>
        <function-ref name="toggle" scoped="" ref="0x407dce20"/>
        <function-ref name="isOutput" scoped="" ref="0x407dcf00"/>
        <function-ref name="get" scoped="" ref="0x407db010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407db0f0"/>
        <function-ref name="set" scoped="" ref="0x407db1d0"/>
        <function-ref name="clr" scoped="" ref="0x407db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052bf28" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a110"/>
        <function-ref name="isInput" scoped="" ref="0x4052a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a3b0"/>
        <function-ref name="get" scoped="" ref="0x4052a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a570"/>
        <function-ref name="set" scoped="" ref="0x4052a650"/>
        <function-ref name="clr" scoped="" ref="0x4052a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40529ba8" loc="49:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40529ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529d80"/>
        <function-ref name="isInput" scoped="" ref="0x40529e60"/>
        <function-ref name="toggle" scoped="" ref="0x40528010"/>
        <function-ref name="isOutput" scoped="" ref="0x405280f0"/>
        <function-ref name="get" scoped="" ref="0x405281d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405282b0"/>
        <function-ref name="set" scoped="" ref="0x40528390"/>
        <function-ref name="clr" scoped="" ref="0x40528470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40520c28" loc="44:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40520c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40520e00"/>
        <function-ref name="isInput" scoped="" ref="0x40520ee0"/>
        <function-ref name="toggle" scoped="" ref="0x4052b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b0f0"/>
        <function-ref name="get" scoped="" ref="0x4052b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b2b0"/>
        <function-ref name="set" scoped="" ref="0x4052b390"/>
        <function-ref name="clr" scoped="" ref="0x4052b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052a890" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052aa68"/>
        <function-ref name="isInput" scoped="" ref="0x4052ab48"/>
        <function-ref name="toggle" scoped="" ref="0x4052ac28"/>
        <function-ref name="isOutput" scoped="" ref="0x4052ad08"/>
        <function-ref name="get" scoped="" ref="0x4052ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052aec8"/>
        <function-ref name="set" scoped="" ref="0x40529010"/>
        <function-ref name="clr" scoped="" ref="0x405290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405285d0" loc="50:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405285d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405287a8"/>
        <function-ref name="isInput" scoped="" ref="0x40528888"/>
        <function-ref name="toggle" scoped="" ref="0x40528968"/>
        <function-ref name="isOutput" scoped="" ref="0x40528a48"/>
        <function-ref name="get" scoped="" ref="0x40528b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528c08"/>
        <function-ref name="set" scoped="" ref="0x40528ce8"/>
        <function-ref name="clr" scoped="" ref="0x40528dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4052b5d0" loc="45:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4052b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b7a8"/>
        <function-ref name="isInput" scoped="" ref="0x4052b888"/>
        <function-ref name="toggle" scoped="" ref="0x4052b968"/>
        <function-ref name="isOutput" scoped="" ref="0x4052ba48"/>
        <function-ref name="get" scoped="" ref="0x4052bb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052bc08"/>
        <function-ref name="set" scoped="" ref="0x4052bce8"/>
        <function-ref name="clr" scoped="" ref="0x4052bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40529250" loc="48:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40529250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529428"/>
        <function-ref name="isInput" scoped="" ref="0x40529508"/>
        <function-ref name="toggle" scoped="" ref="0x405295e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405296c8"/>
        <function-ref name="get" scoped="" ref="0x405297a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529888"/>
        <function-ref name="set" scoped="" ref="0x40529968"/>
        <function-ref name="clr" scoped="" ref="0x40529a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40528f28" loc="51:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40528f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527110"/>
        <function-ref name="isInput" scoped="" ref="0x405271f0"/>
        <function-ref name="toggle" scoped="" ref="0x405272d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405273b0"/>
        <function-ref name="get" scoped="" ref="0x40527490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40527570"/>
        <function-ref name="set" scoped="" ref="0x40527650"/>
        <function-ref name="clr" scoped="" ref="0x40527730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407f5de8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407f5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806010"/>
        <function-ref name="isInput" scoped="" ref="0x408060f0"/>
        <function-ref name="toggle" scoped="" ref="0x408061d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408062b0"/>
        <function-ref name="get" scoped="" ref="0x40806390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40806470"/>
        <function-ref name="set" scoped="" ref="0x40806550"/>
        <function-ref name="clr" scoped="" ref="0x40806630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408057f8" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408057f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408059d0"/>
        <function-ref name="isInput" scoped="" ref="0x40805ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40805b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40805c70"/>
        <function-ref name="get" scoped="" ref="0x40805d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805e30"/>
        <function-ref name="set" scoped="" ref="0x40805f10"/>
        <function-ref name="clr" scoped="" ref="0x40804010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40803228" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40803228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40803400"/>
        <function-ref name="isInput" scoped="" ref="0x408034e0"/>
        <function-ref name="toggle" scoped="" ref="0x408035c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408036a0"/>
        <function-ref name="get" scoped="" ref="0x40803780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40803860"/>
        <function-ref name="set" scoped="" ref="0x40803940"/>
        <function-ref name="clr" scoped="" ref="0x40803a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40802c08" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40802c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40802de0"/>
        <function-ref name="isInput" scoped="" ref="0x40802ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40801010"/>
        <function-ref name="isOutput" scoped="" ref="0x408010f0"/>
        <function-ref name="get" scoped="" ref="0x408011d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408012b0"/>
        <function-ref name="set" scoped="" ref="0x40801390"/>
        <function-ref name="clr" scoped="" ref="0x40801470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408006c0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408006c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40800898"/>
        <function-ref name="isInput" scoped="" ref="0x40800978"/>
        <function-ref name="toggle" scoped="" ref="0x40800a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40800b38"/>
        <function-ref name="get" scoped="" ref="0x40800c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40800cf8"/>
        <function-ref name="set" scoped="" ref="0x40800dd8"/>
        <function-ref name="clr" scoped="" ref="0x40800eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408140b0" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408140b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40814288"/>
        <function-ref name="isInput" scoped="" ref="0x40814368"/>
        <function-ref name="toggle" scoped="" ref="0x40814448"/>
        <function-ref name="isOutput" scoped="" ref="0x40814528"/>
        <function-ref name="get" scoped="" ref="0x40814608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408146e8"/>
        <function-ref name="set" scoped="" ref="0x408147c8"/>
        <function-ref name="clr" scoped="" ref="0x408148a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40813a88" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40813a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40813c60"/>
        <function-ref name="isInput" scoped="" ref="0x40813d40"/>
        <function-ref name="toggle" scoped="" ref="0x40813e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40813f00"/>
        <function-ref name="get" scoped="" ref="0x40812010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408120f0"/>
        <function-ref name="set" scoped="" ref="0x408121d0"/>
        <function-ref name="clr" scoped="" ref="0x408122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40811538" loc="46:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40811538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40811710"/>
        <function-ref name="isInput" scoped="" ref="0x408117f0"/>
        <function-ref name="toggle" scoped="" ref="0x408118d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408119b0"/>
        <function-ref name="get" scoped="" ref="0x40811a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40811b70"/>
        <function-ref name="set" scoped="" ref="0x40811c50"/>
        <function-ref name="clr" scoped="" ref="0x40811d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40530e60" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40530e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f050"/>
        <function-ref name="isInput" scoped="" ref="0x4052f130"/>
        <function-ref name="toggle" scoped="" ref="0x4052f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f2f0"/>
        <function-ref name="get" scoped="" ref="0x4052f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f4b0"/>
        <function-ref name="set" scoped="" ref="0x4052f590"/>
        <function-ref name="clr" scoped="" ref="0x4052f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40539458" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40539458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539630"/>
        <function-ref name="isInput" scoped="" ref="0x40539710"/>
        <function-ref name="toggle" scoped="" ref="0x405397f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405398d0"/>
        <function-ref name="get" scoped="" ref="0x405399b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40539a90"/>
        <function-ref name="set" scoped="" ref="0x40539b70"/>
        <function-ref name="clr" scoped="" ref="0x40539c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40542a30" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40542a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542c08"/>
        <function-ref name="isInput" scoped="" ref="0x40542ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40542dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40542ea8"/>
        <function-ref name="get" scoped="" ref="0x40541010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405410f0"/>
        <function-ref name="set" scoped="" ref="0x405411d0"/>
        <function-ref name="clr" scoped="" ref="0x405412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4053f090" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4053f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053f268"/>
        <function-ref name="isInput" scoped="" ref="0x4053f348"/>
        <function-ref name="toggle" scoped="" ref="0x4053f428"/>
        <function-ref name="isOutput" scoped="" ref="0x4053f508"/>
        <function-ref name="get" scoped="" ref="0x4053f5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053f6c8"/>
        <function-ref name="set" scoped="" ref="0x4053f7a8"/>
        <function-ref name="clr" scoped="" ref="0x4053f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405486c0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405486c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40548898"/>
        <function-ref name="isInput" scoped="" ref="0x40548978"/>
        <function-ref name="toggle" scoped="" ref="0x40548a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40548b38"/>
        <function-ref name="get" scoped="" ref="0x40548c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40548cf8"/>
        <function-ref name="set" scoped="" ref="0x40548dd8"/>
        <function-ref name="clr" scoped="" ref="0x40548eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40546cb8" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40546cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546e90"/>
        <function-ref name="isInput" scoped="" ref="0x40545010"/>
        <function-ref name="toggle" scoped="" ref="0x405450f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405451d0"/>
        <function-ref name="get" scoped="" ref="0x405452b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40545390"/>
        <function-ref name="set" scoped="" ref="0x40545470"/>
        <function-ref name="clr" scoped="" ref="0x40545550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054f3b0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054f588"/>
        <function-ref name="isInput" scoped="" ref="0x4054f668"/>
        <function-ref name="toggle" scoped="" ref="0x4054f748"/>
        <function-ref name="isOutput" scoped="" ref="0x4054f828"/>
        <function-ref name="get" scoped="" ref="0x4054f908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054f9e8"/>
        <function-ref name="set" scoped="" ref="0x4054fac8"/>
        <function-ref name="clr" scoped="" ref="0x4054fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054c978" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054cb50"/>
        <function-ref name="isInput" scoped="" ref="0x4054cc30"/>
        <function-ref name="toggle" scoped="" ref="0x4054cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x4054cdf0"/>
        <function-ref name="get" scoped="" ref="0x4054ced0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054b010"/>
        <function-ref name="set" scoped="" ref="0x4054b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4054b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4054aee0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4054aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405550e0"/>
        <function-ref name="isInput" scoped="" ref="0x405551c0"/>
        <function-ref name="toggle" scoped="" ref="0x405552a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40555380"/>
        <function-ref name="get" scoped="" ref="0x40555460"/>
        <function-ref name="makeOutput" scoped="" ref="0x40555540"/>
        <function-ref name="set" scoped="" ref="0x40555620"/>
        <function-ref name="clr" scoped="" ref="0x40555700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405523e8" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405523e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405525c0"/>
        <function-ref name="isInput" scoped="" ref="0x405526a0"/>
        <function-ref name="toggle" scoped="" ref="0x40552780"/>
        <function-ref name="isOutput" scoped="" ref="0x40552860"/>
        <function-ref name="get" scoped="" ref="0x40552940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40552a20"/>
        <function-ref name="set" scoped="" ref="0x40552b00"/>
        <function-ref name="clr" scoped="" ref="0x40552be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405508f0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40550ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40550ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40550c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40550d68"/>
        <function-ref name="get" scoped="" ref="0x40550e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40550f28"/>
        <function-ref name="set" scoped="" ref="0x4055b018"/>
        <function-ref name="clr" scoped="" ref="0x4055b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4055add8" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4055add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40559010"/>
        <function-ref name="isInput" scoped="" ref="0x405590f0"/>
        <function-ref name="toggle" scoped="" ref="0x405591d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405592b0"/>
        <function-ref name="get" scoped="" ref="0x40559390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40559470"/>
        <function-ref name="set" scoped="" ref="0x40559550"/>
        <function-ref name="clr" scoped="" ref="0x40559630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405563b0" loc="47:/usr/src/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40556588"/>
        <function-ref name="isInput" scoped="" ref="0x40556668"/>
        <function-ref name="toggle" scoped="" ref="0x40556748"/>
        <function-ref name="isOutput" scoped="" ref="0x40556828"/>
        <function-ref name="get" scoped="" ref="0x40556908"/>
        <function-ref name="makeOutput" scoped="" ref="0x405569e8"/>
        <function-ref name="set" scoped="" ref="0x40556ac8"/>
        <function-ref name="clr" scoped="" ref="0x40556ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4057b858" loc="27:/usr/src/tinyos/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4057b858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403e5a58"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403e5a58"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4057ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4057bc08" loc="28:/usr/src/tinyos/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4057bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4057bde0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4057bec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4057a010"/>
        <function-ref name="actualMicro" scoped="" ref="0x4057a0f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4057a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4058c010" loc="60:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4058c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4058d1c8" loc="57:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4058d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4058d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4058db28" loc="59:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4058db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4058d560" loc="58:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4058d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058d738"/>
        <function-ref name="taskLoop" scoped="" ref="0x4058d818"/>
        <function-ref name="runNextTask" scoped="" ref="0x4058d8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403ee9c0" loc="48:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403ee9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403eeb98"/>
        <function-ref name="runTask" scoped="" ref="0x403eec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403e7250" loc="47:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403e7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e7428"/>
        <function-ref name="taskLoop" scoped="" ref="0x403e7508"/>
        <function-ref name="runNextTask" scoped="" ref="0x403e75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40475d30" loc="56:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40475d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40475f08"/>
        <function-ref name="runTask" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404749b8" loc="57:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404749b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40474b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x404754f8" loc="55:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404754f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404756d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x404757b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40475890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4048af10" loc="54:/usr/src/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4048af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40484108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40471438" loc="50:/usr/src/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40471438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40471610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4048a148" loc="51:/usr/src/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4048a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4048a320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4059ac08" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4059ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40599730"/>
        <function-ref name="fired" scoped="" ref="0x405939b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405990f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40593e60"/>
        <function-ref name="getdt" scoped="" ref="0x40599be0"/>
        <function-ref name="gett0" scoped="" ref="0x40599988"/>
        <function-ref name="isRunning" scoped="" ref="0x40593c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40593258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40599410"/>
        <function-ref name="startOneShot" scoped="" ref="0x405934d8"/>
        <function-ref name="stop" scoped="" ref="0x40593758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x405a0280" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405a0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405a0458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x40598010" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x40598010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40597b00"/>
        <function-ref name="fired" scoped="" ref="0x40598d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405974c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40597268"/>
        <function-ref name="getdt" scoped="" ref="0x40596010"/>
        <function-ref name="gett0" scoped="" ref="0x40597d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40597010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40598638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405977e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405988b8"/>
        <function-ref name="stop" scoped="" ref="0x40598b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405a75a0" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405a75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405a7778"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405a7858"/>
        <function-ref name="led1On" scoped="" ref="0x405a7938"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405a7a18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405a7af8"/>
        <function-ref name="get" scoped="" ref="0x405a7bd8"/>
        <function-ref name="led1Off" scoped="" ref="0x405a7cb8"/>
        <function-ref name="led2Off" scoped="" ref="0x405a00f0"/>
        <function-ref name="set" scoped="" ref="0x405a7d98"/>
        <function-ref name="led0On" scoped="" ref="0x405a7e78"/>
        <function-ref name="led2On" scoped="" ref="0x405a0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x405963a8" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x405963a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405a2e98"/>
        <function-ref name="fired" scoped="" ref="0x405a2150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405a2858"/>
        <function-ref name="isOneShot" scoped="" ref="0x405a2600"/>
        <function-ref name="getdt" scoped="" ref="0x405a1368"/>
        <function-ref name="gett0" scoped="" ref="0x405a1110"/>
        <function-ref name="isRunning" scoped="" ref="0x405a23a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405969d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405a2b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40596c50"/>
        <function-ref name="stop" scoped="" ref="0x40596ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403ed698" loc="46:/usr/src/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403ed698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403ed870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403ed950"/>
        <function-ref name="led1On" scoped="" ref="0x403eda30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403edb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403edbf0"/>
        <function-ref name="get" scoped="" ref="0x403edcd0"/>
        <function-ref name="led1Off" scoped="" ref="0x403eddb0"/>
        <function-ref name="led2Off" scoped="" ref="0x405b01d0"/>
        <function-ref name="set" scoped="" ref="0x403ede90"/>
        <function-ref name="led0On" scoped="" ref="0x405b0010"/>
        <function-ref name="led2On" scoped="" ref="0x405b00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405adb00" loc="50:/usr/src/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405adb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405adcd8"/>
        <function-ref name="isInput" scoped="" ref="0x405addb8"/>
        <function-ref name="toggle" scoped="" ref="0x405ade98"/>
        <function-ref name="isOutput" scoped="" ref="0x405ac010"/>
        <function-ref name="get" scoped="" ref="0x405ac0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ac1d0"/>
        <function-ref name="set" scoped="" ref="0x405ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x405ac390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405b0a50" loc="46:/usr/src/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405b0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b0c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x405ac580" loc="51:/usr/src/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405ac580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ac758"/>
        <function-ref name="isInput" scoped="" ref="0x405ac838"/>
        <function-ref name="toggle" scoped="" ref="0x405ac918"/>
        <function-ref name="isOutput" scoped="" ref="0x405ac9f8"/>
        <function-ref name="get" scoped="" ref="0x405acad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405acbb8"/>
        <function-ref name="set" scoped="" ref="0x405acc98"/>
        <function-ref name="clr" scoped="" ref="0x405acd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405b0d98" loc="47:/usr/src/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405b0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405ad010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405ad0f0"/>
        <function-ref name="led1On" scoped="" ref="0x405ad1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405ad2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405ad390"/>
        <function-ref name="get" scoped="" ref="0x405ad470"/>
        <function-ref name="led1Off" scoped="" ref="0x405ad550"/>
        <function-ref name="led2Off" scoped="" ref="0x405ad8d0"/>
        <function-ref name="set" scoped="" ref="0x405ad630"/>
        <function-ref name="led0On" scoped="" ref="0x405ad710"/>
        <function-ref name="led2On" scoped="" ref="0x405ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x405ab010" loc="52:/usr/src/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ab1e8"/>
        <function-ref name="isInput" scoped="" ref="0x405ab2c8"/>
        <function-ref name="toggle" scoped="" ref="0x405ab3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405ab488"/>
        <function-ref name="get" scoped="" ref="0x405ab568"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ab648"/>
        <function-ref name="set" scoped="" ref="0x405ab728"/>
        <function-ref name="clr" scoped="" ref="0x405ab808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405afa20" loc="44:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405afa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405afbf8"/>
        <function-ref name="isInput" scoped="" ref="0x405afcd8"/>
        <function-ref name="toggle" scoped="" ref="0x405afdb8"/>
        <function-ref name="isOutput" scoped="" ref="0x405afe98"/>
        <function-ref name="get" scoped="" ref="0x405c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c50f0"/>
        <function-ref name="set" scoped="" ref="0x405c51d0"/>
        <function-ref name="clr" scoped="" ref="0x405c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405c54c0" loc="45:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405c54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c5698"/>
        <function-ref name="isInput" scoped="" ref="0x405c5778"/>
        <function-ref name="toggle" scoped="" ref="0x405c5858"/>
        <function-ref name="isOutput" scoped="" ref="0x405c5938"/>
        <function-ref name="get" scoped="" ref="0x405c5a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c5af8"/>
        <function-ref name="set" scoped="" ref="0x405c5bd8"/>
        <function-ref name="clr" scoped="" ref="0x405c5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x405c4870" loc="47:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405c4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405c5ec8" loc="46:/usr/src/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405c5ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c40c0"/>
        <function-ref name="isInput" scoped="" ref="0x405c41a0"/>
        <function-ref name="toggle" scoped="" ref="0x405c4280"/>
        <function-ref name="isOutput" scoped="" ref="0x405c4360"/>
        <function-ref name="get" scoped="" ref="0x405c4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c4520"/>
        <function-ref name="set" scoped="" ref="0x405c4600"/>
        <function-ref name="clr" scoped="" ref="0x405c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405c2660" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405c2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cc170"/>
        <function-ref name="fired" scoped="" ref="0x405c13f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405c1b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405c18a8"/>
        <function-ref name="getdt" scoped="" ref="0x406cc620"/>
        <function-ref name="gett0" scoped="" ref="0x406cc3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405c1650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405c2c88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c1e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x405c2f08"/>
        <function-ref name="stop" scoped="" ref="0x405c11a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405cd8e8" loc="49:/usr/src/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405cd8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c93f8"/>
        <function-ref name="fired" scoped="" ref="0x405ca680"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405cad88"/>
        <function-ref name="isOneShot" scoped="" ref="0x405cab30"/>
        <function-ref name="getdt" scoped="" ref="0x405c98a8"/>
        <function-ref name="gett0" scoped="" ref="0x405c9650"/>
        <function-ref name="isRunning" scoped="" ref="0x405ca8d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405cdf10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c90d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405ca1a8"/>
        <function-ref name="stop" scoped="" ref="0x405ca428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405d3938" loc="46:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405d3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405d14c8"/>
        <function-ref name="fired" scoped="" ref="0x405d2768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405d2e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x405d2c18"/>
        <function-ref name="getdt" scoped="" ref="0x405d1978"/>
        <function-ref name="gett0" scoped="" ref="0x405d1720"/>
        <function-ref name="isRunning" scoped="" ref="0x405d29c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d2010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405d11a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d2290"/>
        <function-ref name="stop" scoped="" ref="0x405d2510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405dbaf0" loc="47:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405dbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405dd200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d3188" loc="45:/usr/src/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d3360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x405ea2e0" loc="29:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x405ea2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405eaa30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405eaf20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405eaca8"/>
        <function-ref name="overflow" scoped="" ref="0x405e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d9240" loc="27:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d9418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x405e1978" loc="28:/usr/src/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x405e1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405d8e40"/>
        <function-ref name="fired" scoped="" ref="0x405d8610"/>
        <function-ref name="startAt" scoped="" ref="0x405d8b00"/>
        <function-ref name="isRunning" scoped="" ref="0x405d8888"/>
        <function-ref name="getAlarm" scoped="" ref="0x405d70d8"/>
        <function-ref name="start" scoped="" ref="0x405d80f8"/>
        <function-ref name="stop" scoped="" ref="0x405d8398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406769e0" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406769e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40673010"/>
        <function-ref name="fired" scoped="" ref="0x40675718"/>
        <function-ref name="startAt" scoped="" ref="0x40675c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40675990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40673288"/>
        <function-ref name="start" scoped="" ref="0x40675200"/>
        <function-ref name="stop" scoped="" ref="0x406754a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406765a8" loc="25:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406765a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403e5858"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403e5858"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40676780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406735b8" loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406735b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40673d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40672288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40672010"/>
        <function-ref name="overflow" scoped="" ref="0x40672500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40877c48" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40877c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40877e20"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40877f00"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40892010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408920f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408921d0"/>
        <function-ref name="setControl" scoped="" ref="0x408922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4087dd68" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4087dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4087a258"/>
        <function-ref name="fired" scoped="" ref="0x4087ca00"/>
        <function-ref name="startAt" scoped="" ref="0x4087cef0"/>
        <function-ref name="isRunning" scoped="" ref="0x4087cc78"/>
        <function-ref name="getAlarm" scoped="" ref="0x4087a4d0"/>
        <function-ref name="start" scoped="" ref="0x4087c4e8"/>
        <function-ref name="stop" scoped="" ref="0x4087c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4087d930" loc="25:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4087d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4087db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4087a800" loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4087a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40879010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40879500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40879288"/>
        <function-ref name="overflow" scoped="" ref="0x40879778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40891e98" loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40891e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x408900c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x408901a0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40890280"/>
        <function-ref name="countBusy" scoped="" ref="0x40890360"/>
        <function-ref name="getAssr" scoped="" ref="0x40890440"/>
        <function-ref name="setAssr" scoped="" ref="0x40890520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x408924a0" loc="32:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x408924a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408919f0"/>
        <function-ref name="fired" scoped="" ref="0x40891010"/>
        <function-ref name="get" scoped="" ref="0x40892ae8"/>
        <function-ref name="reset" scoped="" ref="0x40891288"/>
        <function-ref name="isOn" scoped="" ref="0x40891c68"/>
        <function-ref name="set" scoped="" ref="0x40892d60"/>
        <function-ref name="start" scoped="" ref="0x40891500"/>
        <function-ref name="stop" scoped="" ref="0x40891778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40879a68" loc="30:/usr/src/tinyos/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40879a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40877500"/>
        <function-ref name="test" scoped="" ref="0x40877010"/>
        <function-ref name="get" scoped="" ref="0x408780d8"/>
        <function-ref name="setScale" scoped="" ref="0x40877778"/>
        <function-ref name="getScale" scoped="" ref="0x40877a18"/>
        <function-ref name="reset" scoped="" ref="0x40878868"/>
        <function-ref name="overflow" scoped="" ref="0x408785f0"/>
        <function-ref name="isOn" scoped="" ref="0x40877288"/>
        <function-ref name="set" scoped="" ref="0x40878350"/>
        <function-ref name="start" scoped="" ref="0x40878ae0"/>
        <function-ref name="stop" scoped="" ref="0x40878d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40635760" loc="48:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40635760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40635938"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40635a18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40635af8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40635bd8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40635cb8"/>
        <function-ref name="setControl" scoped="" ref="0x40635d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40632c30" loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40632c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40632e08"/>
        <function-ref name="compareBusy" scoped="" ref="0x40632ee8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40631010"/>
        <function-ref name="countBusy" scoped="" ref="0x406310f0"/>
        <function-ref name="getAssr" scoped="" ref="0x406311d0"/>
        <function-ref name="setAssr" scoped="" ref="0x406312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406330f0" loc="49:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406330f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40632660"/>
        <function-ref name="fired" scoped="" ref="0x40633c50"/>
        <function-ref name="get" scoped="" ref="0x40633738"/>
        <function-ref name="reset" scoped="" ref="0x40633ec8"/>
        <function-ref name="isOn" scoped="" ref="0x406328d8"/>
        <function-ref name="set" scoped="" ref="0x406339b0"/>
        <function-ref name="start" scoped="" ref="0x40632170"/>
        <function-ref name="stop" scoped="" ref="0x406323e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40627488" loc="47:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40627488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40636ee0"/>
        <function-ref name="test" scoped="" ref="0x406369f0"/>
        <function-ref name="get" scoped="" ref="0x40627ad0"/>
        <function-ref name="setScale" scoped="" ref="0x40635170"/>
        <function-ref name="getScale" scoped="" ref="0x40635410"/>
        <function-ref name="reset" scoped="" ref="0x40636288"/>
        <function-ref name="overflow" scoped="" ref="0x40636010"/>
        <function-ref name="isOn" scoped="" ref="0x40636c68"/>
        <function-ref name="set" scoped="" ref="0x40627d48"/>
        <function-ref name="start" scoped="" ref="0x40636500"/>
        <function-ref name="stop" scoped="" ref="0x40636778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4063b360" loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4063b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4063b538"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4063b618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4063b6f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4063b7d8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4063b8b8"/>
        <function-ref name="setControl" scoped="" ref="0x4063b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406397b8" loc="52:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406397b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40639990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x40639c18" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40639c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40639df0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40639ed0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40638010"/>
        <function-ref name="countBusy" scoped="" ref="0x406380f0"/>
        <function-ref name="getAssr" scoped="" ref="0x406381d0"/>
        <function-ref name="setAssr" scoped="" ref="0x406382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4063bcc0" loc="51:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4063bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40639288"/>
        <function-ref name="fired" scoped="" ref="0x4063a830"/>
        <function-ref name="get" scoped="" ref="0x4063a318"/>
        <function-ref name="reset" scoped="" ref="0x4063aaa8"/>
        <function-ref name="isOn" scoped="" ref="0x40639500"/>
        <function-ref name="set" scoped="" ref="0x4063a590"/>
        <function-ref name="start" scoped="" ref="0x4063ad20"/>
        <function-ref name="stop" scoped="" ref="0x40639010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4063e010" loc="49:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4063e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4063da68"/>
        <function-ref name="test" scoped="" ref="0x4063d578"/>
        <function-ref name="get" scoped="" ref="0x4063e658"/>
        <function-ref name="setScale" scoped="" ref="0x4063dce0"/>
        <function-ref name="getScale" scoped="" ref="0x4063b010"/>
        <function-ref name="reset" scoped="" ref="0x4063ede8"/>
        <function-ref name="overflow" scoped="" ref="0x4063eb70"/>
        <function-ref name="isOn" scoped="" ref="0x4063d7f0"/>
        <function-ref name="set" scoped="" ref="0x4063e8d0"/>
        <function-ref name="start" scoped="" ref="0x4063d088"/>
        <function-ref name="stop" scoped="" ref="0x4063d300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40687818" loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40687818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406879f0"/>
        <function-ref name="runTask" scoped="" ref="0x40687ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40689e50" loc="49:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40689e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40687350"/>
        <function-ref name="fired" scoped="" ref="0x40688af8"/>
        <function-ref name="startAt" scoped="" ref="0x40687010"/>
        <function-ref name="isRunning" scoped="" ref="0x40688d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x406875c8"/>
        <function-ref name="start" scoped="" ref="0x406885e0"/>
        <function-ref name="stop" scoped="" ref="0x40688880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405daa88" loc="48:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405daa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40689650"/>
        <function-ref name="fired" scoped="" ref="0x40670830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40689010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40670ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40689b00"/>
        <function-ref name="gett0" scoped="" ref="0x406898a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40670a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406700d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40689330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40670358"/>
        <function-ref name="stop" scoped="" ref="0x406705d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406c4050" loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406c4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406c4228"/>
        <function-ref name="runTask" scoped="" ref="0x406c4308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406b7e30" loc="49:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406b7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b4920"/>
        <function-ref name="fired" scoped="" ref="0x406b5bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b42e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b4088"/>
        <function-ref name="getdt" scoped="" ref="0x406b4dd0"/>
        <function-ref name="gett0" scoped="" ref="0x406b4b78"/>
        <function-ref name="isRunning" scoped="" ref="0x406b5e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b5468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b4600"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b56e8"/>
        <function-ref name="stop" scoped="" ref="0x406b5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40695a60" loc="48:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40695a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b7670"/>
        <function-ref name="fired" scoped="" ref="0x406b8840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b7010"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b8d10"/>
        <function-ref name="getdt" scoped="" ref="0x406b7b40"/>
        <function-ref name="gett0" scoped="" ref="0x406b78d8"/>
        <function-ref name="isRunning" scoped="" ref="0x406b8aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b80b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b7340"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b8348"/>
        <function-ref name="stop" scoped="" ref="0x406b85d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406c3460" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406c3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406c3df8" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406c3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c2570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c2a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c27e8"/>
        <function-ref name="overflow" scoped="" ref="0x406c2cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406cb428" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406cb428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c8010"/>
        <function-ref name="fired" scoped="" ref="0x406ca268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406ca970"/>
        <function-ref name="isOneShot" scoped="" ref="0x406ca718"/>
        <function-ref name="getdt" scoped="" ref="0x406c84c0"/>
        <function-ref name="gett0" scoped="" ref="0x406c8268"/>
        <function-ref name="isRunning" scoped="" ref="0x406ca4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406cba50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406cac90"/>
        <function-ref name="startOneShot" scoped="" ref="0x406cbcd0"/>
        <function-ref name="stop" scoped="" ref="0x406ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406c72c0" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406c72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4044b840"/>
            <typename><typedef-ref name="TMilli" ref="0x4044ba08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c6db0"/>
        <function-ref name="fired" scoped="" ref="0x406c6068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c6770"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c6518"/>
        <function-ref name="getdt" scoped="" ref="0x406c52a0"/>
        <function-ref name="gett0" scoped="" ref="0x406c5048"/>
        <function-ref name="isRunning" scoped="" ref="0x406c62c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406c78e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c6a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x406c7b68"/>
        <function-ref name="stop" scoped="" ref="0x406c7de8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/usr/src/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4049db78" loc="62:/usr/src/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403eba00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/src/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4049d010" loc="60:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a0710" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402a9228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a05b8" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4049bce0" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402a9228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404a2338" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a21e0" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404a2a00" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a28a8" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a0010" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404acb50" loc="44:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404aa010" loc="45:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404ac3c0" loc="42:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404aa7e0" loc="47:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404ac780" loc="43:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404aa3e8" loc="46:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404a5c40" loc="40:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404ac010" loc="41:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403e4638" loc="57:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403e7010" loc="72:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403e4a78" loc="65:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403eff20" loc="67:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403eba00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403ee450" loc="75:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x404747e0" loc="76:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4048abb0" loc="62:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4043b0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40471e68" loc="52:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40594600" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40594600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4059bf00" loc="136:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40590ba0" loc="83:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4059cd20" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4059c9d8" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4059cbc0" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4059c530" loc="98:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4059a888" loc="151:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4059a358" loc="144:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4059c070" loc="92:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40594c58" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40594b00" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4059b8e0" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4059b598" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4059b780" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40590320" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405901c8" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405907f0" loc="78:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/usr/src/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/usr/src/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4059d778" loc="61:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4059dbc0" loc="67:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405aa070" loc="72:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405aa8e0" loc="83:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405a85f0" loc="100:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a8a98" loc="117:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x405aa498" loc="77:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a7200" loc="134:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x405a70a8" loc="134:/usr/src/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4059d350" loc="56:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405aad60" loc="89:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x405a81a8" loc="94:/usr/src/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405db310" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405db310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405db7f0" loc="61:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x402a98a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d7998" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d7998"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405d7b00" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d7b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405de010" loc="64:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d7b00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405dea38" loc="76:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405de538" loc="71:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405dee38" loc="82:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d9bc8" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d9bc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405d9d30" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405e1010" loc="109:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405e4cd0" loc="78:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405e3990" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405e3640" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          </variable>
          <variable name="dt" ref="0x405e3830" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405e3138" loc="88:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405e14a0" loc="116:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405e4390" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405e4238" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d9d30"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405e4870" loc="73:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x405fc368" loc="45:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40454b80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40454da8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405fb930" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045dc80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4045dea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405fce40" loc="49:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40457560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40457788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405fb480" loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40457560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40457788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405fb328" loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40457560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40457788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405fa010" loc="54:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045dc80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4045dea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405fbde0" loc="54:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4045dc80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4045dea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405fc988" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40454b80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40454da8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405fc830" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40454b80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40454da8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x4060e4a8" loc="38:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x4060e978" loc="44:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x4060e090" loc="32:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4060ee38" loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406035a0" loc="21:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40459d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40458010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40603b90" loc="27:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40459d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40458010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40603a38" loc="27:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40459d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40458010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405fade0" loc="41:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405fade0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40605d20" loc="74:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40607cb8" loc="58:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406072f0" loc="48:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405fade0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406050f8" loc="62:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406041a8" loc="80:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40607878" loc="54:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405fade0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40607720" loc="54:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405fade0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40605500" loc="65:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406058f8" loc="68:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405f63e8" loc="55:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405f63e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405f3ba0" loc="98:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405f3310" loc="87:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405f68d8" loc="61:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405f63e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40600168" loc="104:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40600010" loc="104:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406005f8" loc="110:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402a8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405f56c8" loc="75:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405f52a8" loc="70:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405f3778" loc="93:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403e69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405f6e50" loc="67:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405f63e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405f6cf8" loc="67:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405f63e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405f5ad0" loc="78:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405f5ec8" loc="81:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
